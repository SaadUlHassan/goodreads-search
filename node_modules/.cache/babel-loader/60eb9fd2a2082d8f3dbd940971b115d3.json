{"ast":null,"code":"import _classCallCheck from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { EventEmitter } from \"events\";\nimport dispatcher from \"../dispatcher\";\n\nvar SearchStore =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inherits(SearchStore, _EventEmitter);\n\n  function SearchStore() {\n    var _this;\n\n    _classCallCheck(this, SearchStore);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchStore).call(this));\n    _this.books = [{\n      id: 113464613,\n      Book: \"Keep typing to get relevant results\",\n      Author: \"...\"\n    }];\n    return _this;\n  }\n\n  _createClass(SearchStore, [{\n    key: \"createBooks\",\n    value: function createBooks(books) {\n      console.log(\"Books\", books); // books.map((book) => {\n      //     const id = Date.now();\n      //     this.books.push({\n      //         id,\n      //         Book: book.name,\n      //         Author: book.author,\n      //     });\n      //     this.emit(\"change\");\n      // })\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      return this.books;\n    }\n  }, {\n    key: \"handleActions\",\n    value: function handleActions(action) {\n      switch (action.type) {\n        case \"ADD_BOOKS\":\n          {\n            this.createBooks(action);\n            break;\n          }\n      }\n    }\n  }]);\n\n  return SearchStore;\n}(EventEmitter);\n\nvar searchStore = new SearchStore();\ndispatcher.register(searchStore.handleActions.bind(searchStore));\nwindow.searchStore = searchStore;\nwindow.dispatcher = dispatcher;\nexport default searchStore;","map":{"version":3,"sources":["/home/machine/emumba/book-app/app/src/js/SearchStore/SearchStore.js"],"names":["EventEmitter","dispatcher","SearchStore","books","id","Book","Author","console","log","action","type","createBooks","searchStore","register","handleActions","bind","window"],"mappings":";;;;;AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,OAAOC,UAAP,MAAuB,eAAvB;;IAEMC,W;;;;;AACF,yBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa,CACT;AACIC,MAAAA,EAAE,EAAE,SADR;AAEIC,MAAAA,IAAI,EAAE,qCAFV;AAGIC,MAAAA,MAAM,EAAE;AAHZ,KADS,CAAb;AAFU;AASb;;;;gCAEWH,K,EAAO;AACfI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAApB,EADe,CAEf;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACH;;;6BAEQ;AACL,aAAO,KAAKA,KAAZ;AACH;;;kCAEaM,M,EAAQ;AAClB,cAAQA,MAAM,CAACC,IAAf;AACI,aAAK,WAAL;AAAkB;AACd,iBAAKC,WAAL,CAAiBF,MAAjB;AACA;AACH;AAJL;AAMH;;;;EAtCqBT,Y;;AA0C1B,IAAMY,WAAW,GAAG,IAAIV,WAAJ,EAApB;AACAD,UAAU,CAACY,QAAX,CAAoBD,WAAW,CAACE,aAAZ,CAA0BC,IAA1B,CAA+BH,WAA/B,CAApB;AACAI,MAAM,CAACJ,WAAP,GAAqBA,WAArB;AACAI,MAAM,CAACf,UAAP,GAAoBA,UAApB;AAEA,eAAeW,WAAf","sourcesContent":["import { EventEmitter } from \"events\";\n\nimport dispatcher from \"../dispatcher\";\n\nclass SearchStore extends EventEmitter {\n    constructor() {\n        super()\n        this.books = [\n            {\n                id: 113464613,\n                Book: \"Keep typing to get relevant results\",\n                Author: \"...\"\n            }\n        ];\n    }\n\n    createBooks(books) {\n        console.log(\"Books\",books)\n        // books.map((book) => {\n        //     const id = Date.now();\n\n        //     this.books.push({\n        //         id,\n        //         Book: book.name,\n        //         Author: book.author,\n        //     });\n\n        //     this.emit(\"change\");\n        // })\n    }\n\n    getAll() {\n        return this.books;\n    }\n\n    handleActions(action) {\n        switch (action.type) {\n            case \"ADD_BOOKS\": {\n                this.createBooks(action);\n                break;\n            }\n        }\n    }\n\n}\n\nconst searchStore = new SearchStore;\ndispatcher.register(searchStore.handleActions.bind(searchStore));\nwindow.searchStore = searchStore;\nwindow.dispatcher = dispatcher;\n\nexport default searchStore;\n"]},"metadata":{},"sourceType":"module"}