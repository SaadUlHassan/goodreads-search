{"ast":null,"code":"import _classCallCheck from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/machine/emumba/book-app/app/src/js/components/Search/SearchBox.js\";\nimport React from \"react\";\nimport axios from 'axios';\n\nvar parseString = require('xml2js').parseString; //import { Redirect } from 'react-router-dom';\n\n\nvar WAIT_INTERVAL = 1000;\nvar active = false;\n\nvar SearchBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SearchBox, _React$Component);\n\n  function SearchBox(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchBox).call(this, props));\n\n    _this.handleChange = function (e) {\n      var query = e.target.value;\n      bookSearch(query);\n    };\n\n    _this.state = {\n      navigate: false,\n      referrer: null\n    };\n    return _this;\n  } // handleClick = () => {\n  //   console.log('Button is cliked!');\n  //   this.setState({ referrer: '/Search' });\n  // }\n\n\n  _createClass(SearchBox, [{\n    key: \"render\",\n    value: function render() {\n      var inputStyles = {\n        marginTop: \"30px\"\n      }; // const {referrer} = this.state;\n      // if (referrer) return <Redirect to={referrer} />;\n      //onClick={this.handleClick}\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        style: inputStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Search\"));\n    }\n  }]);\n\n  return SearchBox;\n}(React.Component);\n\nexport { SearchBox as default };\n\nvar bookSearch = function bookSearch(query) {\n  axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, {\n    crossdomain: true\n  }) //\n  .then(function (response) {\n    // handle success\n    console.log(response);\n    parseString(response.data, {\n      trim: true\n    }, function (err, convertResult) {\n      if (err) throw err;\n      console.log(convertResult.GoodreadsResponse.search[0]);\n    });\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/machine/emumba/book-app/app/src/js/components/Search/SearchBox.js"],"names":["React","axios","parseString","require","WAIT_INTERVAL","active","SearchBox","props","handleChange","e","query","target","value","bookSearch","state","navigate","referrer","inputStyles","marginTop","handleClick","Component","get","crossdomain","then","response","console","log","data","trim","err","convertResult","GoodreadsResponse","search","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,WAApC,C,CACA;;;AAGA,IAAME,aAAa,GAAG,IAAtB;AACA,IAAMC,MAAM,GAAG,KAAf;;IAEqBC,S;;;;;AAEnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,mFAAMA,KAAN;;AADiB,UAanBC,YAbmB,GAaJ,UAACC,CAAD,EAAO;AACpB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AACAC,MAAAA,UAAU,CAACH,KAAD,CAAV;AACD,KAhBkB;;AAEjB,UAAKI,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,KADC;AAEXC,MAAAA,QAAQ,EAAE;AAFC,KAAb;AAFiB;AAMlB,G,CAED;AACA;AACA;AACA;;;;;6BAOS;AACP,UAAMC,WAAW,GAAG;AAClBC,QAAAA,SAAS,EAAE;AADO,OAApB,CADO,CAKP;AACA;AAEA;;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKV,YAAlC;AAAgD,QAAA,KAAK,EAAES,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF;AAMD;;;;EApCoCnB,KAAK,CAACoB,S;;SAAxBd,S;;AAuCrB,IAAMO,UAAU,GAAG,SAAbA,UAAa,CAACH,KAAD,EAAU;AAC3BT,EAAAA,KAAK,CAACoB,GAAN,CAAU,4EAA4EX,KAAtF,EAA6F;AAAEY,IAAAA,WAAW,EAAE;AAAf,GAA7F,EAAsH;AAAtH,GACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAtB,IAAAA,WAAW,CAACsB,QAAQ,CAACG,IAAV,EAAgB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAhB,EAA8B,UAAUC,GAAV,EAAeC,aAAf,EAA8B;AACrE,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,aAAa,CAACC,iBAAd,CAAgCC,MAAhC,CAAuC,CAAvC,CAAZ;AACD,KAHU,CAAX;AAID,GARD,EASCC,KATD,CASO,UAAUC,KAAV,EAAiB;AACtB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,GAZD;AAaD,CAdD","sourcesContent":["import React from \"react\";\nimport axios from 'axios'\nvar parseString = require('xml2js').parseString;\n//import { Redirect } from 'react-router-dom';\n\n\nconst WAIT_INTERVAL = 1000\nconst active = false\n\nexport default class SearchBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      navigate: false,\n      referrer: null,\n    };\n  }\n\n  // handleClick = () => {\n  //   console.log('Button is cliked!');\n  //   this.setState({ referrer: '/Search' });\n  // }\n\n  handleChange = (e) => {\n    const query = e.target.value\n    bookSearch(query)\n  }\n\n  render() {\n    const inputStyles = {\n      marginTop: \"30px\",\n    };\n\n    // const {referrer} = this.state;\n    // if (referrer) return <Redirect to={referrer} />;\n\n    //onClick={this.handleClick}\n\n    return (\n      <div>\n        <input type=\"text\" onChange={this.handleChange} style={inputStyles} />\n        <button onClick={this.handleClick}>Search</button>\n      </div>\n    );\n  }\n}\n\nconst bookSearch = (query) =>{\n  axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, { crossdomain: true })   //\n  .then(function (response) {\n    // handle success\n    console.log(response);\n    parseString(response.data, {trim: true}, function (err, convertResult) {\n      if (err) throw err\n      console.log(convertResult.GoodreadsResponse.search[0]);\n    });\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n}"]},"metadata":{},"sourceType":"module"}