{"ast":null,"code":"import axios from 'axios';\n\nvar parseString = require('xml2js').parseString;\n\nvar bookSearch = function bookSearch(query) {\n  axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, {\n    crossdomain: true\n  }).then(function (response) {\n    console.log(response);\n    parseString(response.data, {\n      trim: true\n    }, function (err, convertedResult) {\n      if (err) throw err;\n      console.log(convertedResult.GoodreadsResponse.search[0]);\n      return convertedResult.GoodreadsResponse.search[0];\n    });\n  }).catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport default bookSearch;","map":{"version":3,"sources":["/home/machine/emumba/book-app/app/src/js/bookSearch.js"],"names":["axios","parseString","require","bookSearch","query","get","crossdomain","then","response","console","log","data","trim","err","convertedResult","GoodreadsResponse","search","catch","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,WAApC;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAU;AACzBJ,EAAAA,KAAK,CAACK,GAAN,CAAU,4EAA4ED,KAAtF,EAA6F;AAAEE,IAAAA,WAAW,EAAE;AAAf,GAA7F,EACCC,IADD,CACM,UAAUC,QAAV,EAAoB;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAP,IAAAA,WAAW,CAACO,QAAQ,CAACG,IAAV,EAAgB;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAhB,EAA8B,UAAUC,GAAV,EAAeC,eAAf,EAAgC;AACvE,UAAID,GAAJ,EAAS,MAAMA,GAAN;AACTJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,eAAe,CAACC,iBAAhB,CAAkCC,MAAlC,CAAyC,CAAzC,CAAZ;AACA,aAAOF,eAAe,CAACC,iBAAhB,CAAkCC,MAAlC,CAAyC,CAAzC,CAAP;AACD,KAJU,CAAX;AAKD,GARD,EASCC,KATD,CASO,UAAUC,KAAV,EAAiB;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAZ;AACD,GAXD;AAYH,CAbD;;AAeA,eAAef,UAAf","sourcesContent":["import axios from 'axios'\nvar parseString = require('xml2js').parseString;\n\nconst bookSearch = (query) =>{\n    axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, { crossdomain: true })\n    .then(function (response) {\n      console.log(response);\n      parseString(response.data, {trim: true}, function (err, convertedResult) {\n        if (err) throw err\n        console.log(convertedResult.GoodreadsResponse.search[0]);\n        return convertedResult.GoodreadsResponse.search[0]\n      });\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n}\n\nexport default bookSearch\n"]},"metadata":{},"sourceType":"module"}