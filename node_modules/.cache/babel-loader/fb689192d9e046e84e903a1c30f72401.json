{"ast":null,"code":"import _regeneratorRuntime from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/machine/emumba/book-app/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\n\nvar parseString = require('xml2js').parseString;\n\nvar bookSearch = function bookSearch(query) {\n  axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, {\n    crossdomain: true\n  }).then(\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(response) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return parseString(response.data, {\n                trim: true\n              }, function (err, convertedResult) {\n                if (err) throw err;\n                console.log(convertedResult.GoodreadsResponse.search[0]);\n                return convertedResult.GoodreadsResponse.search[0];\n              });\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }()).catch(function (error) {\n    console.log(error);\n  });\n};\n\nexport default bookSearch;","map":{"version":3,"sources":["/home/machine/emumba/book-app/app/src/js/bookSearch.js"],"names":["axios","parseString","require","bookSearch","query","get","crossdomain","then","response","data","trim","err","convertedResult","console","log","GoodreadsResponse","search","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,WAApC;;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAU;AACzBJ,EAAAA,KAAK,CAACK,GAAN,CAAU,4EAA4ED,KAAtF,EAA6F;AAAEE,IAAAA,WAAW,EAAE;AAAf,GAA7F,EACCC,IADD;AAAA;AAAA;AAAA;AAAA;AAAA,6BACM,iBAAgBC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAESP,WAAW,CAACO,QAAQ,CAACC,IAAV,EAAgB;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAhB,EAA8B,UAAUC,GAAV,EAAeC,eAAf,EAAgC;AACpF,oBAAID,GAAJ,EAAS,MAAMA,GAAN;AACTE,gBAAAA,OAAO,CAACC,GAAR,CAAYF,eAAe,CAACG,iBAAhB,CAAkCC,MAAlC,CAAyC,CAAzC,CAAZ;AACA,uBAAOJ,eAAe,CAACG,iBAAhB,CAAkCC,MAAlC,CAAyC,CAAzC,CAAP;AACD,eAJuB,CAFpB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADN;;AAAA;AAAA;AAAA;AAAA,OASCC,KATD,CASO,UAAUC,KAAV,EAAiB;AACtBL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,GAXD;AAYH,CAbD;;AAeA,eAAef,UAAf","sourcesContent":["import axios from 'axios'\nvar parseString = require('xml2js').parseString;\n\nconst bookSearch = (query) =>{\n    axios.get('https://www.goodreads.com/search/index.xml?key=rgMebNe9PaPTpob7TImEw&q=' + query, { crossdomain: true })\n    .then(async function (response) {\n      //console.log(response);\n      return await parseString(response.data, {trim: true}, function (err, convertedResult) {\n        if (err) throw err\n        console.log(convertedResult.GoodreadsResponse.search[0]);\n        return convertedResult.GoodreadsResponse.search[0]\n      });\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n}\n\nexport default bookSearch\n"]},"metadata":{},"sourceType":"module"}